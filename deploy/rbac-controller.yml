apiVersion: v1
kind: ServiceAccount
imagePullSecrets:
- name: sf-repo
metadata:
  name: csi-minio-controller
  namespace: kube-system
  labels:
    app: "csi-minio"
    role: "controller"
    owner: "ucloud"

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-minio-provisioner
  labels:
    app: "csi-minio"
    role: "controller"
    tier: "provisioner"
    owner: "ucloud"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]

  
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-minio-attacher
  labels:
    app: "csi-minio"
    role: "controller"
    tier: "attacher"
    owner: "ucloud"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-minio-cluster-driver-registrar
  labels:
    app: "csi-minio"
    role: "controller"
    tier: "cluster-registrar"
    owner: "ucloud"
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: ["csi.storage.k8s.io"]
    resources: ["csidrivers"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-minio-controller
  labels:
    app: "csi-minio"
    role: "controller"
    owner: "ucloud"
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      app: "csi-minio"
  - matchLabels:
      role: "controller"
  - matchLabels:
      owner: "ucloud"
rules: []
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-minio-controller
  labels:
    app: "csi-minio"
    role: "controller"
    owner: "ucloud"
subjects:
  - kind: ServiceAccount
    name: csi-minio-controller
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-minio-controller
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: kube-system
  name: csi-minio-provisioner
  labels:
    app: "csi-minio"
    role: "controller"
    tier: "provisioner"
    owner: "ucloud"
rules:
  # Only one of the following rules for endpoints or leases is required based on
  # what is set for `--leader-election-type`. Endpoints are deprecated in favor of Leases.
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-minio-provsioner
  namespace: kube-system
  labels:
    app: "csi-minio"
    role: "controller"
    tier: "provisioner"
    owner: "ucloud"
subjects:
  - kind: ServiceAccount
    name: csi-minio-controller
    namespace: kube-system
roleRef:
  kind: Role
  name: csi-minio-provisioner
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  # replace with non-default namespace name
  namespace: kube-system
  name: csi-minio-attacher
  labels:
    app: "csi-minio"
    role: "controller"
    tier: "attacher"
    owner: "ucloud"
rules:
  # access to configmaps is only supported for backwards compatibility reasons
  # and can be removed once you are uses Leases (--leader-election-type=leases)
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-minio-attacher
  namespace: kube-system
  labels:
    app: "csi-minio"
    role: "controller"
    tier: "attacher"
    owner: "ucloud"
subjects:
  - kind: ServiceAccount
    name: csi-minio-controller
    namespace: kube-system
roleRef:
  kind: Role
  name: csi-minio-attacher
  apiGroup: rbac.authorization.k8s.io
---

